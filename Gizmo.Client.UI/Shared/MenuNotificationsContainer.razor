@namespace Gizmo.Client.UI.Shared
@inherits CustomDOMComponentBase
@using Gizmo.Web.Components
@using Gizmo.UI.Services

@inject ILocalizationService localizationService

<div class="giz-dropdown-menu @(_isOpen ? "open" : "")"
     id="@Id"
     @ref="@Ref">
    <div class="giz-dropdown-menu__content giz-menu-notifications">
        <div class="giz-menu-notifications__header">
            @localizationService.GetString("GIZ_NOTIFICATIONS_TITLE")
        </div>
        <div class="giz-menu-notifications__body giz-scrollbar--v">

            @if (NotificationsService.ViewState.Notifications != null && NotificationsService.ViewState.Notifications.Count > 0)
            {
                @foreach (var notification in NotificationsService.ViewState.Notifications)
                {
                    <MenuNotificationCard Notification="@notification" />
                }
            }
            else
            {
                <div class="giz-menu-notification-default-item-wrapper">
                    <div class="giz-empty-state">
                        <div class="giz-empty-state__title">@localizationService.GetString("GIZ_NOTIFICATIONS_NO_NEW_NOTIFICATIONS")</div>
                        <div class="giz-empty-state__text">@localizationService.GetString("GIZ_NOTIFICATIONS_NO_NEW_NOTIFICATIONS_MESSAGE")</div>
                    </div>
                </div>
            }

        </div>
        <div class="giz-menu-notifications__footer">
            <div class="giz-menu-notifications__footer__action" @onclick="@(() => NotificationsService.MarkAllAsReadAsync())">@localizationService.GetString("GIZ_NOTIFICATIONS_MARK_ALL_AS_READ")</div>
        </div>
    </div>
</div>