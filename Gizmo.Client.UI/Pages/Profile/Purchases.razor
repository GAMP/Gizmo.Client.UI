@namespace Gizmo.Client.UI.Pages
@inherits ComponentBase
@using Gizmo.Client.UI.ViewModels
@using Gizmo.Client.UI.View.States
@using Gizmo

<div class="giz-profile">
    <div class="giz-profile__body">
        <ProfileHeader />
    
        <ProfileNavigation />

        <div class="giz-profile-user-purchases">
            <div class="giz-profile-user-purchases__header">
                Purchase History
            </div>

            <div class="giz-table-history">
                <DataGrid ItemSource="@PurchasesService.ViewState.Purchases.ToList()"
                          Context="purchases"
                          HasStickyHeader="true"
                          DetailTemplateCustomColumns="true"
                          Class="giz-scrollbar--v">
                    <DetailTemplate>
                        <td colspan="2">
                            <div class="purchase-details__products">
                                @if (purchases.ProductType == ProductType.ProductBundle)
                                {
                                    @foreach (var product in purchases.BundledProducts)
                                    {
                                        <div class="purchase-details-name">Bundle item</div>
                                    }
                                }
                                else
                                {
                                    <div class="purchase-details-name">Bundle item</div>
                                }
                            </div>
                        </td>
                        <td>
                            <div class ="purchase-details__quantities">
                                @if (purchases.ProductType == ProductType.ProductBundle)
                                {
                                    @foreach (var product in purchases.BundledProducts)
                                    {
                                        <div class="purchase-details-quantity">Bundle item</div>
                                    }
                                }
                                else
                                {
                                    <div class="purchase-details-quantity">Bundle item</div>
                                }
                            </div>
                        </td>
                        <td>
                            <div class="purchase-details__prices">
                                @if (purchases.ProductType == ProductType.ProductBundle)
                                {
                                    @foreach (var product in purchases.BundledProducts)
                                    {
                                        <div class="purchase-details-price">Bundle item</div>
                                    }
                                }
                                else
                                {
                                    <div class="purchase-details-price">Bundle item</div>
                                }
                            </div>
                        </td>
                        <td colspan="2">
                            <div class="purchase-details__details">
                                <div class="purchase-details-title">Order comments:</div>
                                <div>Amet minim mollit non deserunt ullamco est sit aliqua dolor do amet sint. Velit officia consequat d...</div>
                                <div class="purchase-details-points">Points</div><div>???</div>
                                <div class="purchase-details-title">Charged:</div><div>Paid so far?</div>
                                <div class="purchase-details-invoice">Invoice</div>
                                <div class="purchase-details-action"><Button Color="ButtonColors.Accent" Text="Repeat order" /></div>
                            </div>
                        </td>
                        @*<div class="purchase-details">
                            <table class="purchase-details__products">
                                @if (purchases.ProductType == ProductType.ProductBundle)
                                {
                                    @foreach (var product in purchases.BundledProducts)
                                    {
                                        <tr><td class="purchase-details-name">Bundle item</td><td>quantity</td><td>price</td></tr>
                                    }
                                }
                                else
                                {
                                    <tr><td class="purchase-details-name">Bundle item</td><td>quantity</td><td>price</td></tr>
                                }
                            </table>
                            
                        </div>*@
                    </DetailTemplate>
                    <ChildContent>
                        <DataGridColumn Field="@(nameof(PurchaseViewState.ProductName))" TItemType="PurchaseViewState" Context="purchase">
                            <HeaderTemplate>
                                Order
                            </HeaderTemplate>
                            <CellTemplate>
                                @purchase.ProductName
                            </CellTemplate>
                        </DataGridColumn>
                        <DataGridColumn Style="width: 16.0rem" Field="@(nameof(PurchaseViewState.OrderStatus))" TItemType="PurchaseViewState" Context="purchase">
                            <HeaderTemplate>
                                Order status
                            </HeaderTemplate>
                            <CellTemplate>
                                @switch (purchase.OrderStatus)
                                {
                                    case OrderStatus.OnHold:
                                        <div class="order-on-hold">@LocalizationService.GetString("ORDER_STATUS_ON_HOLD")</div>
                                        @*TODO: A ADD ENUM TO LocalizationService*@
                                        break;

                                    case OrderStatus.Completed:
                                        <div class="order-completed">@LocalizationService.GetString("ORDER_STATUS_COMPLETED")</div>
                                        break;

                                    case OrderStatus.Canceled:
                                        <div class="order-canceled">@LocalizationService.GetString("ORDER_STATUS_CANCELED")</div>
                                        break;

                                    case OrderStatus.Accepted:
                                        <div class="order-accepted">@LocalizationService.GetString("ORDER_STATUS_ACCEPTED")</div>
                                        break;
                                }
                            </CellTemplate>
                        </DataGridColumn>
                        <DataGridColumn Style="width: 20.0rem" Field="@(nameof(PurchaseViewState.OrderDate))" TItemType="PurchaseViewState" Context="purchase">
                            <HeaderTemplate>
                                Date
                            </HeaderTemplate>
                            <CellTemplate>
                                @purchase.OrderDate.ToString()
                            </CellTemplate>
                        </DataGridColumn>
                        <DataGridColumn Style="width: 16.0rem" Field="@(nameof(PurchaseViewState.PaymentMethod))" TItemType="PurchaseViewState" Context="purchase">
                            <HeaderTemplate>
                                Payment method
                            </HeaderTemplate>
                            <CellTemplate>
                                @purchase.PaymentMethod
                            </CellTemplate>
                        </DataGridColumn>
                        <DataGridColumn Style="width: 28.0rem" Field="@(nameof(PurchaseViewState.Total))" TItemType="PurchaseViewState" Context="purchase">
                            <HeaderTemplate>
                                Order price
                            </HeaderTemplate>
                            <CellTemplate>
                                @purchase.Total
                            </CellTemplate>
                        </DataGridColumn>
                        <DataGridColumn Style="width: 16.0rem" Field="@(nameof(PurchaseViewState.Total))" TItemType="PurchaseViewState" Context="purchase">
                            <HeaderTemplate>
                                Payment status
                            </HeaderTemplate>
                            <CellTemplate>
                                @purchase.Total
                            </CellTemplate>
                        </DataGridColumn>
                    </ChildContent>
                </DataGrid>
            </div>
        </div>

    </div>
</div>