@namespace Gizmo.Client.UI.Pages
@inherits CustomDOMComponentBase
@layout _Layout_Login
@using System.Threading
@using Gizmo.Web.Components
@using Gizmo.Client.UI.Components
@using Microsoft.AspNetCore.Components.Forms
@using Gizmo.UI.Services

@inject ILocalizationService localizationService

<LoginCard>
    <CardHeader>
        <div class="giz-login-links">
            @if (HostService.HostConfigurationViewState.CanSignUp)
            {
                <div class="giz-login-new-user">@localizationService.GetString("GIZ_LOGIN_NOT_A_MEMBER") <a @onclick="UserLoginService.OpenRegistrationAsync">@localizationService.GetString("GIZ_LOGIN_SIGN_UP_NOW")</a></div>
            }
        </div>
        <div class="giz-login-alerts">
            @if (UserLoginService.ViewState.HasLoginError)
            {
                <Toast AlertType="AlertTypes.Danger" Text="We couldn’t find an account matching the username and password you entered. Please check your username and password and try again. Recover your password or create an account" />
            }
            else
            {
                @if (HostService.ReservationViewState.IsPending)@*TODO: A*@
                {
                    <Alert AlertType="AlertTypes.Warning" Title="This computer is reserved at 33:000 p.m." Text="If you log in now, you will be automatically logged out at the specified time"  />
                }
            }
        </div>
    </CardHeader>
    <CardBody>
            <EditForm EditContext="@UserLoginService.EditContext">
            <div class="giz-login-title">@localizationService.GetString("GIZ_LOGIN_SIGN_IN_TITLE")</div>
            <div>
                <ButtonGroup Class="giz-login-method" IsMandatory="true" SelectedItemsChanged="@SelectLoginType">
                    <Button Name="Username" IsSelected="@(UserLoginService.ViewState.LoginType == View.UserLoginType.UsernameOrEmail)">@localizationService.GetString("GIZ_GEN_USERNAME")</Button>
                    <Button Name="Phone" IsSelected="@(UserLoginService.ViewState.LoginType == View.UserLoginType.MobilePhone)">@localizationService.GetString("GIZ_GEN_PHONE_NUMBER")</Button>
                </ButtonGroup>
            </div>
            <div class="giz-form-input">
                @if (UserLoginService.ViewState.LoginType == View.UserLoginType.UsernameOrEmail)
                {
                    <TextInput UpdateOnInput="true" @bind-Value="UserLoginService.ViewState.LoginName" Size="InputSizes.Medium" IsFullWidth="true" Label="@localizationService.GetString("GIZ_GEN_USERNAME")" />
                }
                else
                {
                    <MaskedTextInput Mask="###-###-###" @bind-Value="UserLoginService.ViewState.LoginName" Size="InputSizes.Medium" IsFullWidth="true" Label="@localizationService.GetString("GIZ_GEN_PHONE_NUMBER")" />
                }
            </div>
            @if (HostService.HostConfigurationViewState.CanRecoverPassword)
            {
                <div class="giz-login-forgot-password">
                    <a href="/passwordrecovery">@localizationService.GetString("GIZ_LOGIN_FORGOT_YOUR_PASSWORD")</a>
                </div>
            }
            <div class="giz-form-input">
                <PasswordInput UpdateOnInput="true" @bind-Value="UserLoginService.ViewState.Password" @bind-IsPasswordVisible="UserLoginService.ViewState.IsPasswordVisible" Size="InputSizes.Medium" IsFullWidth="true" Label="@localizationService.GetString("GIZ_GEN_PASSWORD")" />
            </div>
            <div class="giz-form-input">
                <Button Color="ButtonColors.Accent" LeftSVGIcon="@(!UserLoginService.ViewState.IsLogginIn ? Icons.Login_Client : null)" Size="ButtonSizes.ExtraLarge" IsFullWidth="true" @onclick="@UserLoginService.LoginAsync">
                    @if (UserLoginService.ViewState.IsLogginIn)
                    {
                        <GizSpinner />
                    }
                    else
                    {
                        <div>@localizationService.GetString("GIZ_GEN_CONTINUE")</div>
                    }
                </Button>
            </div>
        </EditForm>
    </CardBody>
    <CardFooter>
        @if (HostService.HostConfigurationViewState.CanSignInWithQR)
        {
            <div class="giz-alternative-login">
                <div class="giz-alternative-login__separator"><span>@localizationService.GetString("GIZ_LOGIN_OR")</span></div>
                <div class="giz-alternative-login__qr" @onclick="@(() => HostService.SetHostLockStateAsync(true))">
                    <QRIcon />
                </div>
            </div>
        }
        <InputLanguageMenu />
    </CardFooter>
</LoginCard>
