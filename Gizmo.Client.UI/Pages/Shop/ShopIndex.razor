@namespace Gizmo.Client.UI.Pages
@inherits CustomDOMComponentBase
@using Gizmo.Client.UI.ViewModels

<div class="giz-shop-wrapper">
    <div class="giz-shop">
        <div class="giz-shop__products">
            <div class="giz-shop__products__header">
                <div class="giz-shop__products__header__tab">
                    <ClientTab>
                        <ClientTabItem Class="@(!ShopService.ViewState.SelectedProductGroupId.HasValue ? "active" : "")">
                            <div @onclick=@(() => SelectProductGroup(null))>
                                @LocalizationService.GetString("GIZ_GEN_ALL")
                            </div>
                        </ClientTabItem>
                        @if (ShopService.ViewState.ProductGroups != null)
                        {
                            @foreach (var productGroup in ShopService.ViewState.ProductGroups)
                            {
                                <ClientTabItem Class="@(productGroup.ProductGroupId == ShopService.ViewState.SelectedProductGroupId ? "active" : "")">
                                    <div @onclick=@(() => ShopService.SetSelectedProductGroup(productGroup.ProductGroupId))>
                                        @productGroup.Name
                                    </div>
                                </ClientTabItem>
                            }
                        }
                    </ClientTab>
                </div>
            </div>
            <div class="giz-shop__products__body giz-scrollbar--v">
                <div class="giz-shop__products__body__ads">
                    <ExpansionPanel InitCollapsed="@(SearchService.ViewState.ShowAll)">
                        <Header>
                            @LocalizationService.GetString("GIZ_GEN_ADS")
                        </Header>
                        <ChildContent>
                            <AdsCarousel Interval="5000" />
                        </ChildContent>
                    </ExpansionPanel>
                </div>
        
                @if (SearchService.ViewState.ShowAll)
                {
                    <div class="giz-section">
                        <div class="giz-section__header">
                            <div class="giz-section__header__filters">
                                <div>
                                    <div class="giz-section__header__filters__title">Results for</div>
                                    <div>
                                        <Chip CanClose="true" OnClose="@(() => SearchService.ClearResultsAsync())">@SearchService.ViewState.AppliedSearchPattern</Chip>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="giz-section__body">
                            @if (GetFilteredProducts().Count() > 0)
                            {
                                <div class="giz-shop__products__list">
                                    @foreach (var product in GetFilteredProducts())
                                    {
                                        <ProductCard Product="@product" />
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="global-search-no-results">
                                    @*TODO ShopService.ViewState.SelectedProductGroupId.HasValue*@
                                    <div class="global-search-no-results__header">No match found for <span class="global-search-pattern">@SearchService.ViewState.AppliedSearchPattern</span></div>
                                    <div class="global-search-no-results__body">Try formulating your request differently</div>
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    @if (ShopService.ViewState.SelectedProductGroupId.HasValue)
                    {
                        @if (ShopService.ViewState.ProductGroups != null)
                        {
                            <div class="giz-section">
                                <div class="giz-section__header">
                                    @ShopService.ViewState.ProductGroups.Where(a => a.ProductGroupId == ShopService.ViewState.SelectedProductGroupId).Select(a => a.Name).FirstOrDefault()
                                </div>
                                <div class="giz-section__body">
                                    <div class="giz-shop__products__list">
                                        @foreach (var product in ShopService.ViewState.Products.Where(a => a.ProductGroupId == ShopService.ViewState.SelectedProductGroupId))
                                        {
                                            <ProductCard Product="@product" />
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        @if (ShopService.ViewState.ProductGroups != null)
                        {
                            @foreach (var productGroup in ShopService.ViewState.ProductGroups)
                            {
                                @if (ShopService.ViewState.Products.Where(a => a.ProductGroupId == productGroup.ProductGroupId).Count() > 1)
                                {
                                    <div class="giz-section">
                                        <div class="giz-section__header">
                                            @productGroup.Name
                                        </div>
                                        <div class="giz-section__body">
                                            <div class="giz-shop__products__list">
                                                @foreach (var product in ShopService.ViewState.Products.Where(a => a.ProductGroupId == productGroup.ProductGroupId))
                                                {
                                                    <ProductCard Product="@product" />
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    }
                }
            </div>
        
        </div>
        <div class="giz-shop__order">
            <GizOrder />
        </div>
    </div>
</div>
