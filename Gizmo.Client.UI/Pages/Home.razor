@inherits CustomDOMComponentBase
@using Gizmo.Web.Components
@using Gizmo.Client.UI.Components
@using Gizmo.Client.UI.ViewModels
@using Gizmo.UI.Services

@inject ILocalizationService localizationService 

<div class="giz-home-wrapper">
    <div class="giz-home">
        <div class="giz-home__header">
            <div class="giz-home__header__quick-launch">
                <QuickLauncher />
            </div>
            <div class="giz-home__header__ads">
                <NewsRotator Interval="3000">
                    <NewsRotatorItem />
                    <NewsRotatorItem />
                    <NewsRotatorItem />
                </NewsRotator>
            </div>
        </div>
        <div class="giz-home__body giz-scrollbar--v">
            <div class="giz-home__body__ads">
                <ExpansionPanel InitCollapsed="@SearchService.ViewState.ShowAllLocally">
                    <Header>
                        Ads
                    </Header>
                    <ChildContent>
                        <AdsCarousel Advertisements="@AdvertisementsService.ViewState.Advertisements" Interval="5000" />
                    </ChildContent>
                </ExpansionPanel>
            </div>
            @if (SearchService.ViewState.ShowAllLocally)
            {
                <div class="giz-home__body__results">
                    <div class="giz-section">
                        <div class="giz-section__header">
                            <div class="giz-section__header__filters">
                                <Select HandleSVGIcon="Icons.Select_Client" Size="InputSizes.Small" @bind-Value="_selectedSearchCategoryId" Label="Category:" OpenDirection="PopupOpenDirections.Bottom" MaximumHeight="20.0rem" Class="@(_selectedSearchCategoryId != 0 ? "app-filter--filled" : "app-filter--default")" PopupClass="giz-scrollbar--v">
                                    @if (SearchCategories != null)
                                    {
                                        @foreach (var searchCategories in SearchCategories)
                                        {
                                            <SelectItem Value="@searchCategories.Id" Text="@searchCategories.Name" />
                                        }
                                    }
                                </Select>
                                <div>
                                    <div class="giz-section__header__filters__title">Results for</div>
                                    <div>
                                        <Chip CanClose="true" OnClose="@(() => SearchService.ClearResultsAsync())">@SearchService.ViewState.SearchPattern</Chip>
                                    </div>
                                </div>
                            </div>
                            @if (_selectedSearchCategoryId == 1)
                            {
                                <div class="giz-apps-filters">
                                    <Select LeftSVGIcon="Icons.Sort_Client" HandleSVGIcon="Icons.Select_Client" ValidationErrorStyle="ValidationErrorStyles.BorderOnly" Size="InputSizes.Small" @bind-Value="_selectedSortOptionId" Label="@localizationService.GetString("GIZ_GEN_SORT_BY")" OpenDirection="PopupOpenDirections.Bottom" MaximumHeight="20.0rem" Class="@(_selectedSortOptionId != 1 ? "app-filter--filled" : "app-filter--default")" PopupClass="giz-scrollbar--v">
                                        @if (ApplicationSortOptions != null)
                                        {
                                            @foreach (var sortOption in ApplicationSortOptions)
                                            {
                                                <SelectItem Value="@sortOption.Id" Text="@sortOption.Name" />
                                            }
                                        }
                                    </Select>
                                    <Select HandleSVGIcon="Icons.Select_Client" ValidationErrorStyle="ValidationErrorStyles.BorderOnly" Placeholder="All games and apps" Size="InputSizes.Small" @bind-Value="_selectedApplicationGroupId" Label="@localizationService.GetString("GIZ_APPS_CATEGORY")" OpenDirection="PopupOpenDirections.Bottom" MaximumHeight="20.0rem" Class="@(_selectedApplicationGroupId.HasValue ? "app-filter--filled" : "app-filter--default")" PopupClass="giz-scrollbar--v">
                                        @if (ApplicationsPageService.ViewState.ApplicationGroups != null)
                                        {
                                            @foreach (var appGroup in ApplicationsPageService.ViewState.ApplicationGroups)
                                            {
                                                <SelectItem TValue="int?" Value="@appGroup.Id" Text="@appGroup.Name" />
                                            }
                                        }
                                    </Select>
                                    <MultiSelect HandleSVGIcon="Icons.Select_Client" ValidationErrorStyle="ValidationErrorStyles.BorderOnly" Placeholder="Select something" Size="InputSizes.Small" TValue="int" Value="@SelectedApplicationFilters" ValueChanged="@SelectedApplicationFiltersChanged" Label="@localizationService.GetString("GIZ_APPS_PARAMETERS")" OpenDirection="PopupOpenDirections.Bottom" CanClearValue="true" MaximumHeight="20.0rem" Class="@(SelectedApplicationFilters?.Count > 0 ? "app-filter--filled" : "app-filter--default")">
                                        @if (ApplicationFilters != null)
                                        {
                                            @foreach (var filter in ApplicationFilters)
                                            {
                                                <MultiSelectItem Value="@filter.Id" Text="@filter.Name" />
                                            }
                                        }
                                    </MultiSelect>
                                </div>
                            }
                        </div>
                        <div class="giz-section__body">
                            <div class="giz-home__app-wrapper">
                                @foreach (var app in GetFilteredApplications())
                                {
                                    <ApplicationCard Application="@app" ShowDateAdded="true" OnOpenExecutableSelector="@OpenExecutableSelector"></ApplicationCard>
                                }
                                @foreach (var product in GetFilteredProducts())
                                {
                                    <ProductCard Product="@product" IsHoverable="true" />
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="giz-home__body__popular">
                    <div class="giz-section">
                        <div class="giz-section__header">
                            @localizationService.GetString("GIZ_GEN_POPULAR_ITEMS")
                        </div>
                        <div class="giz-section__body">
                            <div class="giz-home__app-wrapper">
                                @foreach (var product in HomePageService.ViewState.PopularProducts)
                                {
                                    <ProductCard Product="@product" IsHoverable="true"></ProductCard>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
