@inherits ComponentBase
@using Gizmo.Web.Components
@using Gizmo.Client.UI.Components
@using Gizmo.Client.UI.ViewModels

<!--wrapper 1-->
<div class="wrapper_1">
    <section id="giz-apps-sidebar" class="pa-6">
        <!--Apps and games Categories-->
        <div class="giz-apps-categories">
            <List CanClick="true" CanSelect="true" Class="giz-menu-list giz-apps-menu-list" BodyClass="giz-scrollbar-v">
                <ListHeader>
                    <div class="d-flex align-center">
                        @if (_selectedApplicationGroup != null)
                        {
                            @if (_selectedGroupHasSubGroups)
                            {
                                <div class="mr-2"><IconButton Variant="ButtonVariants.Text" Size="ButtonSizes.Small" SVGIcon="Icons.ArrowLeft_Client" @onclick="@OnClickBackButtonHandler" /></div>
                            }
                            <div>@_selectedApplicationGroup.Name</div>
                        }
                        else
                        {
                            <div>Categories</div>
                        }
                    </div>
                </ListHeader>
                <ChildContent>
                    @foreach (var applicationGroup in ApplicationGroups.Where(a =>
                        @*Show subgroups if the clicked group has any*@
                        (_clickedGroupHasSubGroups && a.ParentGroupId == _selectedApplicationGroupId) ||
                        @*Hide subgroups*@
                        (!_clickedGroupHasSubGroups &&
                            @*If there is no selected group, show groups without parent*@
                            (_selectedApplicationGroup == null && !a.ParentGroupId.HasValue) ||
                            @*If there is a selected group, show groups under the selected group*@
                            (_selectedApplicationGroup != null && a.ParentGroupId == _selectedApplicationGroupId))
                        ))
                    {
                        <ListItem Command="@SelectApplicationGroupCommand" CommandParameter="@applicationGroup.Id" IsSelected="@(applicationGroup.Id == _clickedApplicationGroupId)">
                            <div class="d-flex">
                                <div class="mr-auto">
                                    @applicationGroup.Name
                                </div>
                                @if (Applications != null)
                                {
                                    <div class="giz-search-number">
                                        @Applications.Where(a => a.ApplicationGroupId == applicationGroup.Id).Count()
                                    </div>
                                }
                            </div>
                        </ListItem>
                    }
                </ChildContent>
            </List>
        </div>
        <!--/Apps and games Categories-->
        <!--filter cards-->
        <div class="giz-apps-filters">
            <div class="giz-apps-filters-header">
                <div class="giz-apps-filters-text">
                    Filters
                </div>
                <div class="giz-apps-filters-text">
                    <Button Variant="ButtonVariants.Text">Clear</Button>
                </div>
            </div>

            <div class="giz-apps-filters-body giz-scrollbar-v">
                @foreach (var applicationFilters in ApplicationFilters)
                {                
                    <ApplicationFilterCard ApplicationFilter="@applicationFilters" />
                }
            </div>
        </div>
        <!--/filter cards-->
    </section>
</div>
<!--/wrapper 1-->
<!--wrapper 2-->
<div class="wrapper_2 border-start">
    <!--apps and games-->
    <section id="giz-apps-main">

        <div class="giz-apps-header">
            Games & applications
        </div>

        <div class="giz-apps-body giz-scrollbar-v">
            <div class="giz-apps-wrapper">
                @foreach (var app in Applications.Where(a => a.ApplicationGroupId == _clickedApplicationGroupId))
                {
                    <ApplicationCard Application="@app" OnOpenDetails="@OpenDetails" OnOpenExecutableSelector="@OpenExecutableSelector"></ApplicationCard>
                }
            </div>
        </div>

    </section>
    <!--/apps and games-->
</div>
<!--/wrapper 2-->

<ApplicationDetailsDialog @bind-IsOpen="AppDetailsIsOpen" />
<ExecutableSelectorDialog @bind-IsOpen="ExecutableSelectorIsOpen" />