@namespace Gizmo.Client.UI.Components
@inherits CustomDOMComponentBase
@using Gizmo.Web.Components
@using Microsoft.AspNetCore.Components.Forms
@using Gizmo.UI.Services

@inject ILocalizationService localizationService

<HostedDialog>
    <div class="giz-client-dialog giz-change-password-dialog">
        <div class="giz-client-dialog__header">
            <div class="giz-client-dialog__header__title">Password</div>
            <IconButton SVGIcon="Icons.Close" Variant="ButtonVariants.Text" Size="ButtonSizes.Small" Class="close-btn" @onclick="() => CloseDialog()" />
        </div>
        @if (!UserChangePasswordService.ViewState.IsComplete)
        {
            <div class="giz-client-dialog__body">
                <EditForm EditContext="@UserChangePasswordService.EditContext">
                    <div class="giz-form-input">
                        <PasswordInput ShowRevealButton="true"
                                       IsTransparent="true"
                                       Value="@UserChangePasswordService.ViewState.OldPassword"
                                       ValueChanged="@((string value) => UserChangePasswordService.SetOldPassword(value))"
                                       Size="InputSizes.Medium"
                                       IsFullWidth="true"
                                       Label="@localizationService.GetString("GIZ_CHANGE_PASSWORD_CURRENT_PASSWORD")" />
                    </div>
                    <div class="giz-form-input">
                        <PasswordInput ShowRevealButton="true"
                                       IsTransparent="true"
                                       Value="@UserChangePasswordService.ViewState.NewPassword"
                                       ValueChanged="@((string value) => UserChangePasswordService.SetNewPassword(value))"
                                       Size="InputSizes.Medium"
                                       IsFullWidth="true"
                                       Label="@localizationService.GetString("GIZ_CHANGE_PASSWORD_NEW_PASSWORD")" />
                    </div>
                    <div class="giz-form-input">
                        <PasswordInput ShowRevealButton="true"
                                       IsTransparent="true"
                                       Value="@UserChangePasswordService.ViewState.RepeatPassword"
                                       ValueChanged="@((string value) => UserChangePasswordService.SetRepeatPassword(value))"
                                       Size="InputSizes.Medium"
                                       IsFullWidth="true"
                                       Label="@localizationService.GetString("GIZ_CHANGE_PASSWORD_CONFIRM_PASSWORD")" />
                    </div>
                </EditForm>
            </div>
            <div class="giz-client-dialog__footer">
                <Button Color="ButtonColors.Accent" Size="ButtonSizes.ExtraLarge" IsFullWidth="true" @onclick="@(() => UserChangePasswordService.SubmitAsync())">Change password</Button>
            </div>
        }
        else
        {
            <div class="giz-client-alert-dialog">
                <div class="giz-client-alert-dialog__icon">
                    <Icon Size="IconSizes.ExtraLarge" SVGIcon="Icons.Close_Client" />
                </div>
                @*<div class="giz-client-alert-dialog__header">Modal header</div>*@
                <div class="giz-client-alert-dialog__body">
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed
                    do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                    Ut enim ad minim veniam
                </div>
                <div class="giz-client-alert-dialog__actions">
                    <Button Variant="ButtonVariants.Outline" Size="ButtonSizes.Large" @onclick="@(() => CloseDialog())">Close</Button>
                </div>
            </div>
        }
    </div>
</HostedDialog>
