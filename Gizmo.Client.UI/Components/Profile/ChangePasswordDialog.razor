@namespace Gizmo.Client.UI.Components
@inherits CustomDOMComponentBase
@using Gizmo.Web.Components
@using Microsoft.AspNetCore.Components.Forms
@using Gizmo.UI.Services

@inject ILocalizationService localizationService

<HostedDialog>
    <div class="giz-client-dialog giz-change-password-dialog">
        <div class="giz-client-dialog__header">
            <div class="giz-client-dialog__header__title">Password</div>
            <IconButton SVGIcon="Icons.Close" Variant="ButtonVariants.Text" Size="ButtonSizes.Small" Class="close-btn" @onclick="() => CloseDialog()" />
        </div>
        @if (!UserChangePasswordService.ViewState.IsComplete)
        {
            <div class="giz-client-dialog__body">
                <EditForm EditContext="@UserChangePasswordService.EditContext">
                    <div class="giz-form-input">
                        <PasswordInput @bind-Value="UserChangePasswordService.ViewState.OldPassword" Size="InputSizes.Medium" IsFullWidth="true" Label="Current password" />
                    </div>
                    <div class="giz-form-input">
                        <PasswordInput @bind-Value="UserChangePasswordService.ViewState.NewPassword" Size="InputSizes.Medium" IsFullWidth="true" Label="New password" />
                    </div>
                    <div class="giz-form-input">
                        <PasswordInput @bind-Value="UserChangePasswordService.ViewState.RepeatPassword" Size="InputSizes.Medium" IsFullWidth="true" Label="Confirm new password" />
                    </div>
                </EditForm>
            </div>
            <div class="giz-client-dialog__footer">
                <Button Color="ButtonColors.Accent" Size="ButtonSizes.ExtraLarge" IsFullWidth="true" @onclick="@(() => UserChangePasswordService.SubmitAsync())">Change password</Button>
            </div>
        }
        else
        {
            <div>Well done!</div>
        }
    </div>
</HostedDialog>
